{"ast":null,"code":"var _jsxFileName = \"/Users/chrislacross/Desktop/build-a-formik-form_starter/src/App.js\";\n// TODO: import useFormik from formik library\nimport React from 'react';\nimport { useFormik } from 'formik'; // TODO: add a const called formik assigned to useFormik()\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log('form: ', values);\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.name) errors.name = 'Field Required';\n      if (!values.email) errors.email = 'Username should be an email';\n      if (!values.password) errors.password = 'Field Required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), formik.errors.name ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 31\n    }\n  }, formik.errors.name) : 'Field Required', /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 32\n    }\n  }, formik.errors.email) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }\n  }, formik.errors.email) : 'Field Required', /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chrislacross/Desktop/build-a-formik-form_starter/src/App.js"],"names":["React","useFormik","App","formik","initialValues","name","email","password","onSubmit","values","console","log","validate","errors","handleSubmit","handleChange","color"],"mappings":"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","sourcesContent":["// TODO: import useFormik from formik library\nimport React from 'react';\nimport {useFormik} from 'formik'\n\n  // TODO: add a const called formik assigned to useFormik()\n\n  function App() {\n    const formik = useFormik({\n      initialValues: {\n        name: '',\n        email: '',\n        password: ''\n      },\n      onSubmit: values =>{\n        console.log('form: ', values);\n      },\n      validate: values =>{\n        let errors = {};\n        if(!values.name) errors.name = 'Field Required';\n        if(!values.email) errors.email = 'Username should be an email';\n        if(!values.password) errors.password = 'Field Required';\n        return errors;\n      }\n    });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Name</div>\n        <input name=\"name\" type=\"text\" onChange={formik.handleChange} \n        value={formik.values.name}/>\n        {formik.errors.name ? <div style={{color:'red'}}>{formik.errors.name}</div> : 'Field Required'}   \n          <div>Email</div>\n          <input name=\"email\" type=\"text\" onChange={formik.handleChange} \n        value={formik.values.email}/>\n        {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email}</div> : null}   \n          <div>Password</div>\n          <input name=\"password\" type=\"text\" onChange={formik.handleChange} \n        value={formik.values.password}/>\n        {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email}</div> : 'Field Required'}   \n            <button type=\"submit\">Submit</button>\n            </form>\n    </div>\n    );\n  }\n\n  export default App;\n"]},"metadata":{},"sourceType":"module"}